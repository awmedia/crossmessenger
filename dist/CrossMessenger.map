{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ac9a84379905e9c13767","webpack:///./index.js","webpack:///./lib/CrossMessenger.js","webpack:///./~/eventemitter3/index.js"],"names":["module","exports","require","CrossMessenger","config","targetFrame","targetOrigin","messageScope","messageHandler","_validateConfigAndThrowOnError","_targetFrame","contentWindow","_targetOrigin","_messageScope","_messageHandler","handleMessage","_waitingForReplyList","_hasHandshake","_isDomReady","_isReady","Promise","resolve","reject","_isReadyResolver","_isReadyRejector","window","addEventListener","_handleReceive","document","readyState","setTimeout","_setDomSuccess","bind","messageOrId","messageData","baseMessage","id","message","Object","assign","replyId","send","expectReply","force","_send","then","required","forEach","property","Error","_registeredMessageScopes","indexOf","emit","_idCounter","String","result","serializedMessage","JSON","stringify","postMessage","error","_setHandshakeSuccess","_setReadyWhenReady","name","parse","data","isValidMessage","isHandshake","isReply","reply","isValidReply","replyResolver","replyPayload","success","getMessage","payload"],"mappings":"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W,cAAc;AACzB,YAAW,QAAQ;AACnB,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,2DAA0D,OAAO;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0CAAyC,SAAS;AAClD;AACA;;AAEA;AACA,IAAG;AACH;AACA;;AAEA,gBAAe,YAAY;AAC3B;;AAEA;AACA,4DAA2D;AAC3D,gEAA+D;AAC/D,oEAAmE;AACnE,wEAAuE;AACvE;AACA,2DAA0D,SAAS;AACnE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,SAAS;AACpB,YAAW,MAAM;AACjB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,SAAS;AACpB,YAAW,MAAM;AACjB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,YAAW,SAAS;AACpB,YAAW,MAAM;AACjB,YAAW,QAAQ;AACnB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH,4DAA2D,YAAY;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAW,cAAc;AACzB,cAAa,aAAa;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"CrossMessenger.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CrossMessenger\"] = factory();\n\telse\n\t\troot[\"CrossMessenger\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ac9a84379905e9c13767","module.exports = require('./lib/CrossMessenger');\n\n\n// WEBPACK FOOTER //\n// ./index.js","'use strict';\n\nimport EventEmitter from 'eventemitter3'\n\n/*\nFeatures:\n - Queuing of messages when messenger is not ready. (The send method will send when to ready promise is resolved.)\n - Reply messages (useful to return data or to let the sender know that a message is processed)\n - Promises - when sending a message a promise will be returned\n - Auto serialize/unserialize messages\n - Message scopes to only process messages from the configured scope\n - Auto handshake to detect and confirm when both messenger sides are ready to send and receive messages\n */\n\n/**\n * CrossMessenger\n * Messenger to communicate between frames through postMessage. Messages can be replied to confirm processing or to return\n * data. Use the custom messageHandler to control the return value.\n * When sending a message, a Promise will be the return value. When the optional param \"expectReply\" is true, the Promise will be resolved after the\n * other side has replied the message with the reply message object as the argument. When false, the Promise will be resolved instantly.\n *\n * @param   config.targetFrame          Ref to the target element (iframe or window.parent (when in iframe)). The target element should support postMessage.\n * @param   config.targetOrigin         Default *\n * @param   config.messageScope         Scope of messages to accept. Messages from other scopes will be ignored. The scope of the sender and receiver should be equal.\n * @param   config.messageHandler       A class or object with a \"handleMessage\" function or a function. Params: message and messenger. The return value of the messageHandler will be used as the reply payload...\n *\n * @event   receive     When a message or a reply is received\n * @event   message     When a message is received  (NOT a reply)\n * @event   send        When a message will be sended\n * @event   reply       When a reply is received\n * @event   domready    When the DOM is ready\n * @event   handshake   When handshake is successful and ready\n * @event   ready       When both, the dom and the handshake, are successful and ready\n */\nclass CrossMessenger extends EventEmitter {\n    static _idCounter = 0;\n\n    static _registeredMessageScopes = [];\n\n    constructor({targetFrame, targetOrigin = '*', messageScope, messageHandler } = config) {\n        super();\n\n        this._validateConfigAndThrowOnError({targetFrame, targetOrigin, messageScope, messageHandler});\n\n        // configureable\n        this._targetFrame = (targetFrame && 'contentWindow' in targetFrame) ? targetFrame.contentWindow : targetFrame\n        this._targetOrigin = targetOrigin;\n        this._messageScope = messageScope;\n        this._messageHandler = messageHandler;\n\n        if (typeof this._messageHandler == 'object') {\n            this._messageHandler = this._messageHandler.handleMessage;\n        }\n\n        // protected\n        this._waitingForReplyList = {};\n        this._hasHandshake = false;\n        this._isDomReady = false;\n\n        this._isReady = new Promise((resolve, reject) => {\n            this._isReadyResolver = resolve;\n            this._isReadyRejector = reject;\n        });\n\n        // start listening to incoming messages\n        window.addEventListener('message', this._handleReceive);\n\n        // Is dom ready? If so, mark internal ready state as true, otherwise attach\n        // an event listener to the document to detect when dom is ready...\n        if (document.readyState === 'complete') {\n            setTimeout(this._setDomSuccess.bind(this));\n        } else {\n            document.addEventListener('DOMContentLoaded', this._setDomSuccess);\n            window.addEventListener('load', this._setDomSuccess);\n        }\n    }\n\n    /**\n     * Public methods\n     */\n\n    /**\n     * reply\n     * @param messageOrId\n     * @param messageData   additional message data, will be merged with message\n     * @return {*}\n     */\n    reply(messageOrId, messageData = {}) {\n        const baseMessage = (typeof messageOrId == 'object') ? messageOrId : { id: messageOrId },\n              message = Object.assign({}, baseMessage, messageData, { replyId: baseMessage.id });\n\n        return this.send(message);\n    }\n\n    /**\n     * send\n     * Message will only be send when both sides are ready to send and\n     * receive messages, or when \"force\" is true;\n     * @param message\n     * @param expectReply\n     * @param force         boolean     true to send even when system is not ready (used internally for handshake)\n     */\n    send(message, expectReply = false, force = false) {\n        if (force) {\n            return this._send(message, expectReply);\n        } else {\n            return this._isReady.then(() => this._send(message, expectReply));\n        }\n    }\n\n    /**\n     * Protected methods\n     */\n\n    _validateConfigAndThrowOnError(config) {\n        const required = ['targetFrame', 'targetOrigin', 'messageScope'];\n\n        required.forEach((property) => {\n            if (!(property in config)) {\n                throw new Error(`Config property: \"${property}\" is required`);\n            };\n        });\n\n        if (!config.targetFrame) {\n            throw new Error('Invalid target frame');\n        }\n\n        if (CrossMessenger._registeredMessageScopes.indexOf(config.messageScope) !== -1) {\n            throw new Error(`Invalid message scope: ${config.messageScope} is not unique`);\n        }\n\n        if (config.messageHandler) {\n            if (typeof config.messageHandler == 'object' && !('handleMessage' in config.messageHandler)) {\n                throw new Error('Message handler object should contain a \"handleMessage\" function');\n            } else if(['object', 'function'].indexOf(typeof config.messageHandler) === -1) {\n                throw new Error('Message handler should be a function of an object with a \"handleMessage\" function...');\n            }\n        }\n    }\n\n    /**\n     * _send\n     * Unsafe send method. Will send message without taking into account if both sides\n     * are ready to send and receive messages.\n     * @param message\n     */\n    _send = (message, expectReply = false) => {\n        const id = String(CrossMessenger._idCounter++);\n\n        let result,\n            serializedMessage;\n\n        if (expectReply) {\n            result = new Promise((resolve) => {\n                this._waitingForReplyList[id] = resolve;\n            });\n        } else {\n            result = Promise.resolve();\n        }\n\n        message.id = id;\n        message.messageScope = this._messageScope;\n        message.expectReply = expectReply;\n\n        try {\n            serializedMessage = JSON.stringify(message);\n            this.emit('send', message);\n            this._targetFrame.postMessage(serializedMessage, this._targetOrigin);\n        } catch(error) {\n            throw new Error('Could not serialize message: ' + error);\n        }\n\n        return result;\n    }\n\n    _setHandshakeSuccess = () => {\n        if (!this._hasHandshake) {\n            this._hasHandshake = true;\n            this.emit('handshake', this);\n            this._setReadyWhenReady();\n\n        }\n    }\n\n    _setDomSuccess = () => {\n        if (!this._isDomReady) {\n            this._isDomReady = true;\n\n            this.emit('domready', this);\n            this._setReadyWhenReady();\n\n            if (!this._hasHandshake) {\n                this.send({ name: '_handshake' }, false, true);\n            }\n        }\n    }\n\n    _setReadyWhenReady() {\n        if (this._hasHandshake && this._isDomReady) {\n            this._isReadyResolver();\n            this.emit('ready', this);\n        }\n    }\n\n    /**\n     * Event handler methods\n     */\n\n    _handleReceive = (postMessage) => {\n        let message;\n\n        try {\n            message = JSON.parse(postMessage.data);\n        } catch(error) {\n            // Could not parse message. Message is invalid, so ignore...\n            return;\n        }\n\n        const {id, messageScope, name, expectReply, replyId} = message,\n              isValidMessage = (messageScope === this._messageScope && !!id),\n              isHandshake = (isValidMessage && name === '_handshake'),\n              isReply = !!replyId;\n\n        // when the message is not a reply but is a _handshake, confirm\n        // the handshake by replying.\n        if (isValidMessage && isHandshake && id) {\n            if (!isReply) {\n                this.reply(message, true);\n            }\n\n            setTimeout(this._setHandshakeSuccess.bind(this));\n        }\n\n        // Not a CrossMessenger message or not a message for this instance...\n        if (!isValidMessage) {\n            return;\n        }\n\n        const isValidReply = replyId in this._waitingForReplyList,\n              replyResolver = isValidReply ? this._waitingForReplyList[replyId] : null;\n\n        this.emit('receive', message, this);\n\n        if (isValidReply) {\n            replyResolver(message);\n            delete this._waitingForReplyList[replyId];\n            this.emit('reply', message, this);\n        } else {\n            if (expectReply) {\n                let replyPayload =  null,\n                    success = true,\n                    error = null;\n\n                if (this._messageHandler) {\n                    try {\n                        replyPayload = this._messageHandler(message, this);\n                    } catch(error) {\n                        error = error.getMessage();\n                        success = false;\n                    }\n                }\n\n                this.reply({\n                    ...message,\n                    payload: replyPayload,\n                    success,\n                    error\n                });\n            } else if(this._messageHandler) {\n                this._messageHandler(message, this);\n            }\n\n            this.emit('message', message, this);\n        }\n    }\n}\n\nmodule.exports = CrossMessenger;\n\n\n\n// WEBPACK FOOTER //\n// ./lib/CrossMessenger.js","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @api private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {Mixed} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @api private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @api public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @api public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Boolean} exists Only check if there are listeners.\n * @returns {Array|Boolean}\n * @api public\n */\nEventEmitter.prototype.listeners = function listeners(event, exists) {\n  var evt = prefix ? prefix + event : event\n    , available = this._events[evt];\n\n  if (exists) return !!available;\n  if (!available) return [];\n  if (available.fn) return [available.fn];\n\n  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {\n    ee[i] = available[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @api public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  var listener = new EE(fn, context || this)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn The listener function.\n * @param {Mixed} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  var listener = new EE(fn, context || this, true)\n    , evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;\n  else if (!this._events[evt].fn) this._events[evt].push(listener);\n  else this._events[evt] = [this._events[evt], listener];\n\n  return this;\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {String|Symbol} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {Mixed} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n         listeners.fn === fn\n      && (!once || listeners.once)\n      && (!context || listeners.context === context)\n    ) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n           listeners[i].fn !== fn\n        || (once && !listeners[i].once)\n        || (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else if (--this._eventsCount === 0) this._events = new Events();\n    else delete this._events[evt];\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {String|Symbol} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @api public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) {\n      if (--this._eventsCount === 0) this._events = new Events();\n      else delete this._events[evt];\n    }\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// This function doesn't apply anymore.\n//\nEventEmitter.prototype.setMaxListeners = function setMaxListeners() {\n  return this;\n};\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/eventemitter3/index.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}